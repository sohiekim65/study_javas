package baekjoon;
import java.util.Scanner;
// 백준 2292
// 1. 문제 파악
// 중앙의 방 1부터 시작해서 이웃하는 방에 돌아가면서 1씩 증가하는 번호를 주소로 매길 수 있다. 
// 숫자 N이 주어졌을 때, 벌집의 중앙 1에서 N번 방까지 최소 개수의 방을 지나서 갈 때 
// 몇 개의 방을 지나가는지 계산 N(1 ≤ N ≤ 1,000,000,000)

// 2. 유추 파악
// 중앙을 1부터 시작해서 시계 방향으로 번호가 1씩 증가하여 매겨져 있는데
// 1부터 입력한 숫자까지 몇 개의 육각형을 지나가는지 계산

// 3. 주요 단어 영문 이름 선정
//  입력 - input
//  출력 - output
public class Beehive {
    public static void main(String[] args) {
        // 4. 테스트 케이스
        // 13 --> 3
        // 7 --> 2
        // 35 --> 4

        // 정리
        // 1번째 방 : 1
        // 2번째 방 : 1 < N <= 7
        // 3번째 방 : 7 < N <= 19
        // 4번째 방 : 19 < N <= 37
        // 6, 12, 18, 24, ... 커지는걸 알 수 있음

        // 육각형 방에서 제일 큰 수는 1, 7, 19, 37, ... 이다(여기서도 6, 12, 18, .. 이렇게 커지는걸 알 수 있음)

        // N - 육각형 안에 수들(1번째 방의 1, 2번째 방의 2,3,4,5,6,7 ...)
        // layer - 1번째 방인지 2번째 방인지 방의 층
        // num - 육각형 방에서 제일 큰 수들(1, 7, 19, 37 ...)

        
        // 5. 입력
        Scanner scanner = new Scanner(System.in);
        int input = scanner.nextInt();
        int num = 1;    // 현재 육각형의 제일 큰 수
        int layer = 1;  // 처음 방은 1번째 방

        // input이 35이라면
        // num = 1 + 6 --> 7 , layer = 2
        // num = 7 + 12 --> 19, layer = 3
        // num = 19 + 18 --> 37 , layer = 4
        
        while(input > num){
            // 입력받은 숫자가 육각형의 제일 큰 수를 넘기지 않을 때까지
            // 6의 배수만큼 증가 
            num += layer*6;
            layer++;
        }

        System.out.println(layer);
    }
}
